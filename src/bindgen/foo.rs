/* automatically generated by rust-bindgen */

# [ repr ( C ) ] # [ derive ( Debug , Copy , Clone ) ] pub struct Foo { pub x : :: std :: os :: raw :: c_int , } # [ test ] fn bindgen_test_layout_Foo ( ) { assert_eq ! ( :: std :: mem :: size_of :: < Foo > ( ) , 4usize , concat ! ( "Size of: " , stringify ! ( Foo ) ) ) ; assert_eq ! ( :: std :: mem :: align_of :: < Foo > ( ) , 4usize , concat ! ( "Alignment of " , stringify ! ( Foo ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < Foo > ( ) ) ) . x as * const _ as usize } , 0usize , concat ! ( "Offset of field: " , stringify ! ( Foo ) , "::" , stringify ! ( x ) ) ) ; } extern "C" { pub fn foo_get ( x : * const Foo ) -> :: std :: os :: raw :: c_int ; } extern "C" { pub fn foo_set ( x : * mut Foo , value : :: std :: os :: raw :: c_int ) ; } extern "C" { pub fn foo_print ( x : * const Foo ) ; }